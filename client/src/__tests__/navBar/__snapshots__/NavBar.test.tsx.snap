// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavBar test renders without crash 1`] = `
<NavBar>
  <WithStyles(ForwardRef(AppBar))>
    <ForwardRef(AppBar)
      classes={
        Object {
          "colorDefault": "MuiAppBar-colorDefault",
          "colorInherit": "MuiAppBar-colorInherit",
          "colorPrimary": "MuiAppBar-colorPrimary",
          "colorSecondary": "MuiAppBar-colorSecondary",
          "colorTransparent": "MuiAppBar-colorTransparent",
          "positionAbsolute": "MuiAppBar-positionAbsolute",
          "positionFixed": "MuiAppBar-positionFixed",
          "positionRelative": "MuiAppBar-positionRelative",
          "positionStatic": "MuiAppBar-positionStatic",
          "positionSticky": "MuiAppBar-positionSticky",
          "root": "MuiAppBar-root",
        }
      }
    >
      <WithStyles(ForwardRef(Paper))
        className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
        component="header"
        elevation={4}
        square={true}
      >
        <ForwardRef(Paper)
          className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
          classes={
            Object {
              "elevation0": "MuiPaper-elevation0",
              "elevation1": "MuiPaper-elevation1",
              "elevation10": "MuiPaper-elevation10",
              "elevation11": "MuiPaper-elevation11",
              "elevation12": "MuiPaper-elevation12",
              "elevation13": "MuiPaper-elevation13",
              "elevation14": "MuiPaper-elevation14",
              "elevation15": "MuiPaper-elevation15",
              "elevation16": "MuiPaper-elevation16",
              "elevation17": "MuiPaper-elevation17",
              "elevation18": "MuiPaper-elevation18",
              "elevation19": "MuiPaper-elevation19",
              "elevation2": "MuiPaper-elevation2",
              "elevation20": "MuiPaper-elevation20",
              "elevation21": "MuiPaper-elevation21",
              "elevation22": "MuiPaper-elevation22",
              "elevation23": "MuiPaper-elevation23",
              "elevation24": "MuiPaper-elevation24",
              "elevation3": "MuiPaper-elevation3",
              "elevation4": "MuiPaper-elevation4",
              "elevation5": "MuiPaper-elevation5",
              "elevation6": "MuiPaper-elevation6",
              "elevation7": "MuiPaper-elevation7",
              "elevation8": "MuiPaper-elevation8",
              "elevation9": "MuiPaper-elevation9",
              "outlined": "MuiPaper-outlined",
              "root": "MuiPaper-root",
              "rounded": "MuiPaper-rounded",
            }
          }
          component="header"
          elevation={4}
          square={true}
        >
          <header
            className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed MuiPaper-elevation4"
          >
            <WithStyles(ForwardRef(Toolbar))
              style={
                Object {
                  "display": "flex",
                  "justifyContent": "space-around",
                }
              }
            >
              <ForwardRef(Toolbar)
                classes={
                  Object {
                    "dense": "MuiToolbar-dense",
                    "gutters": "MuiToolbar-gutters",
                    "regular": "MuiToolbar-regular",
                    "root": "MuiToolbar-root",
                  }
                }
                style={
                  Object {
                    "display": "flex",
                    "justifyContent": "space-around",
                  }
                }
              >
                <div
                  className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                  style={
                    Object {
                      "display": "flex",
                      "justifyContent": "space-around",
                    }
                  }
                >
                  <WithStyles(ForwardRef(Typography))
                    style={
                      Object {
                        "fontWeight": 900,
                      }
                    }
                    variant="h6"
                  >
                    <ForwardRef(Typography)
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      style={
                        Object {
                          "fontWeight": 900,
                        }
                      }
                      variant="h6"
                    >
                      <h6
                        className="MuiTypography-root MuiTypography-h6"
                        style={
                          Object {
                            "fontWeight": 900,
                          }
                        }
                      >
                        KERPICH
                      </h6>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <div
                    className="makeStyles-search-2"
                  >
                    <div
                      className="makeStyles-searchIcon-3"
                    >
                      <ForwardRef>
                        <WithStyles(ForwardRef(SvgIcon))>
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef>
                    </div>
                    <WithStyles(ForwardRef(InputBase))
                      classes={
                        Object {
                          "input": "makeStyles-inputInput-5",
                          "root": "makeStyles-inputRoot-4",
                        }
                      }
                      inputProps={
                        Object {
                          "aria-label": "search",
                        }
                      }
                      onChange={[Function]}
                      placeholder="Searchâ€¦"
                      value=""
                    >
                      <ForwardRef(InputBase)
                        classes={
                          Object {
                            "adornedEnd": "MuiInputBase-adornedEnd",
                            "adornedStart": "MuiInputBase-adornedStart",
                            "colorSecondary": "MuiInputBase-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInputBase-formControl",
                            "fullWidth": "MuiInputBase-fullWidth",
                            "input": "MuiInputBase-input makeStyles-inputInput-5",
                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                            "inputMarginDense": "MuiInputBase-inputMarginDense",
                            "inputMultiline": "MuiInputBase-inputMultiline",
                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                            "marginDense": "MuiInputBase-marginDense",
                            "multiline": "MuiInputBase-multiline",
                            "root": "MuiInputBase-root makeStyles-inputRoot-4",
                          }
                        }
                        inputProps={
                          Object {
                            "aria-label": "search",
                          }
                        }
                        onChange={[Function]}
                        placeholder="Searchâ€¦"
                        value=""
                      >
                        <div
                          className="MuiInputBase-root makeStyles-inputRoot-4"
                          onClick={[Function]}
                        >
                          <input
                            aria-label="search"
                            className="MuiInputBase-input makeStyles-inputInput-5"
                            onAnimationStart={[Function]}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            placeholder="Searchâ€¦"
                            type="text"
                            value=""
                          />
                        </div>
                      </ForwardRef(InputBase)>
                    </WithStyles(ForwardRef(InputBase))>
                  </div>
                  <AvatarMenu
                    anchorEl={null}
                    goToAdd={[Function]}
                    goToProfile={[Function]}
                    handleClick={[Function]}
                    handleClose={[Function]}
                    handleSignOut={[Function]}
                  >
                    <WithStyles(ForwardRef(IconButton))
                      aria-controls="simple-menu"
                      aria-haspopup="true"
                      color="secondary"
                      onClick={[Function]}
                    >
                      <ForwardRef(IconButton)
                        aria-controls="simple-menu"
                        aria-haspopup="true"
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit",
                            "colorPrimary": "MuiIconButton-colorPrimary",
                            "colorSecondary": "MuiIconButton-colorSecondary",
                            "disabled": "Mui-disabled",
                            "edgeEnd": "MuiIconButton-edgeEnd",
                            "edgeStart": "MuiIconButton-edgeStart",
                            "label": "MuiIconButton-label",
                            "root": "MuiIconButton-root",
                            "sizeSmall": "MuiIconButton-sizeSmall",
                          }
                        }
                        color="secondary"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-controls="simple-menu"
                          aria-haspopup="true"
                          centerRipple={true}
                          className="MuiIconButton-root MuiIconButton-colorSecondary"
                          disabled={false}
                          focusRipple={true}
                          onClick={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            aria-controls="simple-menu"
                            aria-haspopup="true"
                            centerRipple={true}
                            className="MuiIconButton-root MuiIconButton-colorSecondary"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            disabled={false}
                            focusRipple={true}
                            onClick={[Function]}
                          >
                            <button
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiIconButton-label"
                              >
                                <WithStyles(ForwardRef(Avatar))>
                                  <ForwardRef(Avatar)
                                    classes={
                                      Object {
                                        "circle": "MuiAvatar-circle",
                                        "colorDefault": "MuiAvatar-colorDefault",
                                        "fallback": "MuiAvatar-fallback",
                                        "img": "MuiAvatar-img",
                                        "root": "MuiAvatar-root",
                                        "rounded": "MuiAvatar-rounded",
                                        "square": "MuiAvatar-square",
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiAvatar-root MuiAvatar-circle MuiAvatar-colorDefault"
                                    >
                                      <ForwardRef(PersonIcon)
                                        className="MuiAvatar-fallback"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiAvatar-fallback"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiAvatar-fallback"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root MuiAvatar-fallback"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(PersonIcon)>
                                    </div>
                                  </ForwardRef(Avatar)>
                                </WithStyles(ForwardRef(Avatar))>
                              </span>
                              <WithStyles(memo)
                                center={true}
                              >
                                <ForwardRef(TouchRipple)
                                  center={true}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(IconButton)>
                    </WithStyles(ForwardRef(IconButton))>
                    <WithStyles(ForwardRef(Menu))
                      anchorEl={null}
                      id="simple-menu"
                      keepMounted={true}
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Menu)
                        anchorEl={null}
                        classes={
                          Object {
                            "list": "MuiMenu-list",
                            "paper": "MuiMenu-paper",
                          }
                        }
                        id="simple-menu"
                        keepMounted={true}
                        onClose={[Function]}
                        open={false}
                      >
                        <WithStyles(ForwardRef(Popover))
                          PaperProps={
                            Object {
                              "classes": Object {
                                "root": "MuiMenu-paper",
                              },
                            }
                          }
                          anchorEl={null}
                          anchorOrigin={
                            Object {
                              "horizontal": "left",
                              "vertical": "top",
                            }
                          }
                          getContentAnchorEl={[Function]}
                          id="simple-menu"
                          keepMounted={true}
                          onClose={[Function]}
                          onEntering={[Function]}
                          open={false}
                          transformOrigin={
                            Object {
                              "horizontal": "left",
                              "vertical": "top",
                            }
                          }
                          transitionDuration="auto"
                        >
                          <ForwardRef(Popover)
                            PaperProps={
                              Object {
                                "classes": Object {
                                  "root": "MuiMenu-paper",
                                },
                              }
                            }
                            anchorEl={null}
                            anchorOrigin={
                              Object {
                                "horizontal": "left",
                                "vertical": "top",
                              }
                            }
                            classes={
                              Object {
                                "paper": "MuiPopover-paper",
                                "root": "MuiPopover-root",
                              }
                            }
                            getContentAnchorEl={[Function]}
                            id="simple-menu"
                            keepMounted={true}
                            onClose={[Function]}
                            onEntering={[Function]}
                            open={false}
                            transformOrigin={
                              Object {
                                "horizontal": "left",
                                "vertical": "top",
                              }
                            }
                            transitionDuration="auto"
                          >
                            <ForwardRef(Modal)
                              BackdropProps={
                                Object {
                                  "invisible": true,
                                }
                              }
                              className="MuiPopover-root"
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Portal)
                                disablePortal={false}
                              >
                                <Portal
                                  containerInfo={
                                    <body>
                                      <div
                                        aria-hidden="true"
                                        class="MuiPopover-root"
                                        id="simple-menu"
                                        role="presentation"
                                        style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                      >
                                        <div
                                          data-test="sentinelStart"
                                          tabindex="0"
                                        />
                                        <div
                                          class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                          style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                          tabindex="-1"
                                        >
                                          <ul
                                            class="MuiList-root MuiMenu-list MuiList-padding"
                                            role="menu"
                                            tabindex="-1"
                                          >
                                            <li
                                              aria-disabled="false"
                                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                              role="menuitem"
                                              tabindex="0"
                                            >
                                              Profile
                                              <span
                                                class="MuiTouchRipple-root"
                                              />
                                            </li>
                                            <li
                                              aria-disabled="false"
                                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                              role="menuitem"
                                              tabindex="-1"
                                            >
                                              AddPost
                                              <span
                                                class="MuiTouchRipple-root"
                                              />
                                            </li>
                                            <li
                                              aria-disabled="false"
                                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                              role="menuitem"
                                              tabindex="-1"
                                            >
                                              SignOut
                                              <span
                                                class="MuiTouchRipple-root"
                                              />
                                            </li>
                                          </ul>
                                        </div>
                                        <div
                                          data-test="sentinelEnd"
                                          tabindex="0"
                                        />
                                      </div>
                                    </body>
                                  }
                                >
                                  <div
                                    className="MuiPopover-root"
                                    id="simple-menu"
                                    onKeyDown={[Function]}
                                    role="presentation"
                                    style={
                                      Object {
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "fixed",
                                        "right": 0,
                                        "top": 0,
                                        "visibility": "hidden",
                                        "zIndex": 1300,
                                      }
                                    }
                                  >
                                    <ForwardRef(SimpleBackdrop)
                                      invisible={true}
                                      onClick={[Function]}
                                      open={false}
                                    />
                                    <Unstable_TrapFocus
                                      disableAutoFocus={false}
                                      disableEnforceFocus={false}
                                      disableRestoreFocus={false}
                                      getDoc={[Function]}
                                      isEnabled={[Function]}
                                      open={false}
                                    >
                                      <div
                                        data-test="sentinelStart"
                                        tabIndex={0}
                                      />
                                      <ForwardRef(Grow)
                                        appear={true}
                                        in={false}
                                        onEnter={[Function]}
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        tabIndex="-1"
                                        timeout="auto"
                                      >
                                        <Transition
                                          addEndListener={[Function]}
                                          appear={true}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          tabIndex="-1"
                                          timeout={null}
                                          unmountOnExit={false}
                                        >
                                          <WithStyles(ForwardRef(Paper))
                                            className="MuiPopover-paper"
                                            classes={
                                              Object {
                                                "root": "MuiMenu-paper",
                                              }
                                            }
                                            elevation={8}
                                            style={
                                              Object {
                                                "opacity": 0,
                                                "transform": "scale(0.75, 0.5625)",
                                                "visibility": "hidden",
                                              }
                                            }
                                            tabIndex="-1"
                                          >
                                            <ForwardRef(Paper)
                                              className="MuiPopover-paper"
                                              classes={
                                                Object {
                                                  "elevation0": "MuiPaper-elevation0",
                                                  "elevation1": "MuiPaper-elevation1",
                                                  "elevation10": "MuiPaper-elevation10",
                                                  "elevation11": "MuiPaper-elevation11",
                                                  "elevation12": "MuiPaper-elevation12",
                                                  "elevation13": "MuiPaper-elevation13",
                                                  "elevation14": "MuiPaper-elevation14",
                                                  "elevation15": "MuiPaper-elevation15",
                                                  "elevation16": "MuiPaper-elevation16",
                                                  "elevation17": "MuiPaper-elevation17",
                                                  "elevation18": "MuiPaper-elevation18",
                                                  "elevation19": "MuiPaper-elevation19",
                                                  "elevation2": "MuiPaper-elevation2",
                                                  "elevation20": "MuiPaper-elevation20",
                                                  "elevation21": "MuiPaper-elevation21",
                                                  "elevation22": "MuiPaper-elevation22",
                                                  "elevation23": "MuiPaper-elevation23",
                                                  "elevation24": "MuiPaper-elevation24",
                                                  "elevation3": "MuiPaper-elevation3",
                                                  "elevation4": "MuiPaper-elevation4",
                                                  "elevation5": "MuiPaper-elevation5",
                                                  "elevation6": "MuiPaper-elevation6",
                                                  "elevation7": "MuiPaper-elevation7",
                                                  "elevation8": "MuiPaper-elevation8",
                                                  "elevation9": "MuiPaper-elevation9",
                                                  "outlined": "MuiPaper-outlined",
                                                  "root": "MuiPaper-root MuiMenu-paper",
                                                  "rounded": "MuiPaper-rounded",
                                                }
                                              }
                                              elevation={8}
                                              style={
                                                Object {
                                                  "opacity": 0,
                                                  "transform": "scale(0.75, 0.5625)",
                                                  "visibility": "hidden",
                                                }
                                              }
                                              tabIndex="-1"
                                            >
                                              <div
                                                className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                style={
                                                  Object {
                                                    "opacity": 0,
                                                    "transform": "scale(0.75, 0.5625)",
                                                    "visibility": "hidden",
                                                  }
                                                }
                                                tabIndex="-1"
                                              >
                                                <ForwardRef(MenuList)
                                                  actions={
                                                    Object {
                                                      "current": Object {
                                                        "adjustStyleForScrollbar": [Function],
                                                      },
                                                    }
                                                  }
                                                  autoFocus={false}
                                                  autoFocusItem={false}
                                                  className="MuiMenu-list"
                                                  onKeyDown={[Function]}
                                                  variant="selectedMenu"
                                                >
                                                  <WithStyles(ForwardRef(List))
                                                    className="MuiMenu-list"
                                                    onKeyDown={[Function]}
                                                    role="menu"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(List)
                                                      className="MuiMenu-list"
                                                      classes={
                                                        Object {
                                                          "dense": "MuiList-dense",
                                                          "padding": "MuiList-padding",
                                                          "root": "MuiList-root",
                                                          "subheader": "MuiList-subheader",
                                                        }
                                                      }
                                                      onKeyDown={[Function]}
                                                      role="menu"
                                                      tabIndex={-1}
                                                    >
                                                      <ul
                                                        className="MuiList-root MuiMenu-list MuiList-padding"
                                                        onKeyDown={[Function]}
                                                        role="menu"
                                                        tabIndex={-1}
                                                      >
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          key=".$.0"
                                                          onClick={[Function]}
                                                          tabIndex={0}
                                                        >
                                                          <ForwardRef(MenuItem)
                                                            classes={
                                                              Object {
                                                                "dense": "MuiMenuItem-dense",
                                                                "gutters": "MuiMenuItem-gutters",
                                                                "root": "MuiMenuItem-root",
                                                                "selected": "Mui-selected",
                                                              }
                                                            }
                                                            onClick={[Function]}
                                                            tabIndex={0}
                                                          >
                                                            <WithStyles(ForwardRef(ListItem))
                                                              button={true}
                                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiMenuItem-dense",
                                                                }
                                                              }
                                                              component="li"
                                                              disableGutters={false}
                                                              onClick={[Function]}
                                                              role="menuitem"
                                                              tabIndex={0}
                                                            >
                                                              <ForwardRef(ListItem)
                                                                button={true}
                                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                classes={
                                                                  Object {
                                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                    "button": "MuiListItem-button",
                                                                    "container": "MuiListItem-container",
                                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                    "disabled": "Mui-disabled",
                                                                    "divider": "MuiListItem-divider",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "gutters": "MuiListItem-gutters",
                                                                    "root": "MuiListItem-root",
                                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                                    "selected": "Mui-selected",
                                                                  }
                                                                }
                                                                component="li"
                                                                disableGutters={false}
                                                                onClick={[Function]}
                                                                role="menuitem"
                                                                tabIndex={0}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                  component="li"
                                                                  disabled={false}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="li"
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex={0}
                                                                  >
                                                                    <li
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      Profile
                                                                      <WithStyles(memo)
                                                                        center={false}
                                                                      >
                                                                        <ForwardRef(TouchRipple)
                                                                          center={false}
                                                                          classes={
                                                                            Object {
                                                                              "child": "MuiTouchRipple-child",
                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                              "root": "MuiTouchRipple-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            className="MuiTouchRipple-root"
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              component={null}
                                                                              exit={true}
                                                                            />
                                                                          </span>
                                                                        </ForwardRef(TouchRipple)>
                                                                      </WithStyles(memo)>
                                                                    </li>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(ListItem)>
                                                            </WithStyles(ForwardRef(ListItem))>
                                                          </ForwardRef(MenuItem)>
                                                        </WithStyles(ForwardRef(MenuItem))>
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          key=".$.1"
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(MenuItem)
                                                            classes={
                                                              Object {
                                                                "dense": "MuiMenuItem-dense",
                                                                "gutters": "MuiMenuItem-gutters",
                                                                "root": "MuiMenuItem-root",
                                                                "selected": "Mui-selected",
                                                              }
                                                            }
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(ListItem))
                                                              button={true}
                                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiMenuItem-dense",
                                                                }
                                                              }
                                                              component="li"
                                                              disableGutters={false}
                                                              onClick={[Function]}
                                                              role="menuitem"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef(ListItem)
                                                                button={true}
                                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                classes={
                                                                  Object {
                                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                    "button": "MuiListItem-button",
                                                                    "container": "MuiListItem-container",
                                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                    "disabled": "Mui-disabled",
                                                                    "divider": "MuiListItem-divider",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "gutters": "MuiListItem-gutters",
                                                                    "root": "MuiListItem-root",
                                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                                    "selected": "Mui-selected",
                                                                  }
                                                                }
                                                                component="li"
                                                                disableGutters={false}
                                                                onClick={[Function]}
                                                                role="menuitem"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                  component="li"
                                                                  disabled={false}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex={-1}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="li"
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <li
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      AddPost
                                                                      <WithStyles(memo)
                                                                        center={false}
                                                                      >
                                                                        <ForwardRef(TouchRipple)
                                                                          center={false}
                                                                          classes={
                                                                            Object {
                                                                              "child": "MuiTouchRipple-child",
                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                              "root": "MuiTouchRipple-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            className="MuiTouchRipple-root"
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              component={null}
                                                                              exit={true}
                                                                            />
                                                                          </span>
                                                                        </ForwardRef(TouchRipple)>
                                                                      </WithStyles(memo)>
                                                                    </li>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(ListItem)>
                                                            </WithStyles(ForwardRef(ListItem))>
                                                          </ForwardRef(MenuItem)>
                                                        </WithStyles(ForwardRef(MenuItem))>
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          key=".$.2"
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(MenuItem)
                                                            classes={
                                                              Object {
                                                                "dense": "MuiMenuItem-dense",
                                                                "gutters": "MuiMenuItem-gutters",
                                                                "root": "MuiMenuItem-root",
                                                                "selected": "Mui-selected",
                                                              }
                                                            }
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(ListItem))
                                                              button={true}
                                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiMenuItem-dense",
                                                                }
                                                              }
                                                              component="li"
                                                              disableGutters={false}
                                                              onClick={[Function]}
                                                              role="menuitem"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef(ListItem)
                                                                button={true}
                                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                classes={
                                                                  Object {
                                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                    "button": "MuiListItem-button",
                                                                    "container": "MuiListItem-container",
                                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                    "disabled": "Mui-disabled",
                                                                    "divider": "MuiListItem-divider",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "gutters": "MuiListItem-gutters",
                                                                    "root": "MuiListItem-root",
                                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                                    "selected": "Mui-selected",
                                                                  }
                                                                }
                                                                component="li"
                                                                disableGutters={false}
                                                                onClick={[Function]}
                                                                role="menuitem"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                  component="li"
                                                                  disabled={false}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex={-1}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="li"
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <li
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      SignOut
                                                                      <WithStyles(memo)
                                                                        center={false}
                                                                      >
                                                                        <ForwardRef(TouchRipple)
                                                                          center={false}
                                                                          classes={
                                                                            Object {
                                                                              "child": "MuiTouchRipple-child",
                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                              "root": "MuiTouchRipple-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            className="MuiTouchRipple-root"
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              component={null}
                                                                              exit={true}
                                                                            />
                                                                          </span>
                                                                        </ForwardRef(TouchRipple)>
                                                                      </WithStyles(memo)>
                                                                    </li>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(ListItem)>
                                                            </WithStyles(ForwardRef(ListItem))>
                                                          </ForwardRef(MenuItem)>
                                                        </WithStyles(ForwardRef(MenuItem))>
                                                      </ul>
                                                    </ForwardRef(List)>
                                                  </WithStyles(ForwardRef(List))>
                                                </ForwardRef(MenuList)>
                                              </div>
                                            </ForwardRef(Paper)>
                                          </WithStyles(ForwardRef(Paper))>
                                        </Transition>
                                      </ForwardRef(Grow)>
                                      <div
                                        data-test="sentinelEnd"
                                        tabIndex={0}
                                      />
                                    </Unstable_TrapFocus>
                                  </div>
                                </Portal>
                              </ForwardRef(Portal)>
                            </ForwardRef(Modal)>
                          </ForwardRef(Popover)>
                        </WithStyles(ForwardRef(Popover))>
                      </ForwardRef(Menu)>
                    </WithStyles(ForwardRef(Menu))>
                  </AvatarMenu>
                </div>
              </ForwardRef(Toolbar)>
            </WithStyles(ForwardRef(Toolbar))>
          </header>
        </ForwardRef(Paper)>
      </WithStyles(ForwardRef(Paper))>
    </ForwardRef(AppBar)>
  </WithStyles(ForwardRef(AppBar))>
</NavBar>
`;
