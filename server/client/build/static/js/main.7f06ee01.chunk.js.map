{"version":3,"sources":["api.ts","components/Auth/AuthContext.tsx","components/NavBar/AvatarMenu.tsx","components/NavBar/SingleSearchResult.tsx","components/Profile/ProfileContext.tsx","components/NavBar/NavBar.tsx","components/Post/PostCanvas.tsx","components/AddPost/ColorSelect.tsx","components/AddPost/FontFamilySelect.tsx","components/AddPost/FontSizeSelect.tsx","components/AddPost/FontWeightSelect.tsx","components/AddPost/TextAlignSelect.tsx","utils.ts","components/AddPost/TextContentInput.tsx","components/AddPost/PostAttributes.tsx","components/AddPost/AddPost.tsx","components/Auth/Register.tsx","components/Auth/SignIn.tsx","components/Auth/Landing.tsx","components/Post/PostDisplay.tsx","components/Profile/EmptyProfile.tsx","components/Post/PostsContainer.tsx","components/Profile/PostTabs.tsx","components/Profile/ProfileOwner.tsx","components/Profile/Profile.tsx","components/Routes/ProtectedRoute.tsx","components/Routes/Routes.tsx","theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["axios","create","baseURL","withCredentials","defaultAuthContextValue","isAuthenticated","Promise","authenticated","setAuthenticated","user","setUser","signOut","AuthContext","createContext","AuthContextProvider","children","useState","useCallback","a","api","get","response","data","console","log","AuthContextValue","useMemo","Provider","value","AvatarMenu","handleClick","anchorEl","handleClose","goToAdd","goToProfile","handleSignOut","useContext","IconButton","color","aria-controls","aria-haspopup","onClick","Avatar","src","image","undefined","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","useStyles","makeStyles","result","marginTop","overflow","backgroundColor","cursor","SingleSearchResult","pickUser","classes","Grid","container","alignItems","className","item","xs","Typography","userName","ProfileContext","profileOwner","setProfileOwner","ProfileContextProvider","ProfileContextValue","theme","createStyles","grow","flexGrow","search","position","borderRadius","shape","fade","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","resultContainer","maxHeight","overflowY","NavBar","searchResults","setSearchResults","displayResults","setDisplayResults","setAnchorEl","history","useHistory","push","_id","handleChange","e","target","results","length","resultsContainer","useRef","pageClick","current","contains","useEffect","window","addEventListener","AppBar","Toolbar","style","variant","fontWeight","InputBase","placeholder","root","input","inputProps","onChange","Paper","ref","map","i","key","event","currentTarget","PostCanvas","fontFamily","fontSize","textAlign","textContent","isBigScreen","useMediaQuery","wrapper","margin","text","justify","md","elevation","ColorSelect","label","setColor","onChangeComplete","hex","FontFamilySelect","setFontFamily","setFontWeightValues","fontFamilies","options","Select","fullWidth","defaultValue","index","Number","font","FontSizeSelect","setFontSize","size","FontWeightSelect","fontWeightValues","setFontWeight","indexOf","TextAlignSelect","setTextAlign","s","charAt","toUpperCase","slice","TextContentInput","setTextContent","TextField","type","PostAttributes","setBackgroundColor","addPost","maxWidth","direction","Button","goBack","lg","AddPost","post","author","user_id","likes","overflowX","minHeight","Register","register","setShowSignin","userNameInput","setUserNameInput","formik","useFormik","validateOnBlur","validateOnChange","initialValues","firstName","lastName","email","password","password2","onSubmit","values","displayName","validationSchema","Yup","min","max","required","trim","test","then","catch","error","oneOf","preventDefault","handleSubmit","name","touched","errors","helperText","SignIn","signin","Landing","showSignin","setError","errorMessage","setErrorMessage","status","message","Container","card","icon","secondary","dark","header","PostDisplay","fetch","liked","setLiked","handleLike","put","like","Card","CardHeader","avatar","aria-label","title","subheader","Date","createdAt","toDateString","toLocaleTimeString","CardContent","CardActions","disableSpacing","EmptyProfile","activeTab","alignContent","PostsContainer","posts","fetchLikedPosts","fetchFeed","fetchUserPosts","isLoading","CircularProgress","primary","activeButton","PostTabs","setActiveTab","useStyle","buttonWrapper","ProfileOwner","handleFollow","Error","handleUnfollow","followers","grid","Profile","feed","setFeed","setPosts","setLikes","setIsLoading","postsToRender","setPostsToRender","displayedId","setDisplayedId","pathname","useLocation","getProfile","profileToRender","updatePosts","path","arr","split","getProfileId","ProtectedRoute","render","location","to","state","from","Routes","loading","setLoading","err","exact","component","createMuiTheme","main","light","typography","App","props","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f06ee01.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: `http://localhost:5000/api/v1/`,\n    withCredentials: true,\n});\n","import React, {\n    createContext,\n    FunctionComponent,\n    Dispatch,\n    useMemo,\n    useState,\n    SetStateAction,\n    ReactNode,\n    useCallback,\n} from \"react\";\nimport api from \"../../api\";\nimport { ResponseUser } from \"../../../../interfaces/user.interfaces\";\n\nexport type AuthContextObject = {\n    isAuthenticated: () => Promise<void>;\n    authenticated: boolean;\n    setAuthenticated: Dispatch<SetStateAction<boolean>>;\n    user: ResponseUser | null;\n    setUser: Dispatch<SetStateAction<ResponseUser | null>>;\n    signOut: () => Promise<void>;\n};\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const defaultAuthContextValue: AuthContextObject = {\n    isAuthenticated: () => new Promise(() => false),\n    authenticated: false,\n    setAuthenticated: () => {},\n    user: null,\n    setUser: () => {},\n    signOut: () => new Promise(() => {}),\n};\n\nconst AuthContext = createContext<AuthContextObject>(defaultAuthContextValue);\n\nconst AuthContextProvider: FunctionComponent<Props> = ({ children }) => {\n    const [authenticated, setAuthenticated] = useState<boolean>(false);\n    const [user, setUser] = useState<ResponseUser | null>(null);\n\n    const isAuthenticated = useCallback(async (): Promise<void> => {\n        try {\n            const response = await api.get(\"auth/authenticate\");\n            setAuthenticated(response.data.isAuthenticated);\n            if (!user) {\n                setUser(response.data.user);\n            }\n        } catch (error) {\n            setAuthenticated(false);\n            setUser(null);\n        }\n    }, [user]);\n\n    const signOut = useCallback(async () => {\n        try {\n            await api.get(\"auth/signout\");\n            setAuthenticated(false);\n            setUser(null);\n        } catch (err) {\n            console.log(\"Error : \", err);\n            throw err;\n        }\n    }, []);\n\n    const AuthContextValue: AuthContextObject = useMemo(() => {\n        const value = {\n            isAuthenticated,\n            authenticated,\n            setAuthenticated,\n            user,\n            setUser,\n            signOut,\n        };\n        return value;\n    }, [isAuthenticated, authenticated, setAuthenticated, user, setUser, signOut]);\n\n    return <AuthContext.Provider value={AuthContextValue}>{children}</AuthContext.Provider>;\n};\n\nexport { AuthContextProvider, AuthContext };\n","import { Avatar, IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport React, { FunctionComponent, useContext } from \"react\";\nimport { AuthContext } from \"../Auth/AuthContext\";\n\nexport type AvatarMenuProps = {\n    handleClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    anchorEl: HTMLElement | null;\n    handleClose: () => void;\n    goToProfile: () => void;\n    goToAdd: () => void;\n    handleSignOut: () => void;\n};\n\nconst AvatarMenu: FunctionComponent<AvatarMenuProps> = ({\n    handleClick,\n    anchorEl,\n    handleClose,\n    goToAdd,\n    goToProfile,\n    handleSignOut,\n}) => {\n    const { user } = useContext(AuthContext);\n    return (\n        <>\n            <IconButton color=\"secondary\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                <Avatar src={user ? user.image : undefined} />\n            </IconButton>\n            <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n                <MenuItem onClick={goToProfile}>Profile</MenuItem>\n                <MenuItem onClick={goToAdd}>AddPost</MenuItem>\n                <MenuItem onClick={handleSignOut}>SignOut</MenuItem>\n            </Menu>\n        </>\n    );\n};\n\nexport default AvatarMenu;\n","import { Avatar, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { FunctionComponent } from \"react\";\nimport { SearchedUser } from \"../../../../interfaces/user.interfaces\";\n\nconst useStyles = makeStyles({\n    result: {\n        marginTop: 10,\n        overflow: \"hidden\",\n        \"&:hover\": {\n            backgroundColor: \"#ffffff\",\n            cursor: \"pointer\",\n        },\n    },\n});\n\nexport type SingleSearchResultProps = {\n    user: SearchedUser;\n    pickUser: (user: SearchedUser) => void;\n};\n\nconst SingleSearchResult: FunctionComponent<SingleSearchResultProps> = ({ user, pickUser }) => {\n    const classes = useStyles();\n    return (\n        <Grid container alignItems=\"center\" onClick={() => pickUser(user)} className={classes.result}>\n            <Grid item xs={3}>\n                <Avatar src={user.image} />\n            </Grid>\n            <Grid item xs={9}>\n                <Typography>{user.userName}</Typography>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default SingleSearchResult;\n","import React, { createContext, Dispatch, FunctionComponent, ReactNode, SetStateAction, useMemo, useState } from \"react\";\nimport { SearchedUser } from \"../../../../interfaces/user.interfaces\";\n\nexport type ProfileContextObject = {\n    profileOwner: SearchedUser | null;\n    setProfileOwner: Dispatch<SetStateAction<SearchedUser | null>>;\n};\n\ntype Props = {\n    children: ReactNode;\n};\n\nexport const defaultProfileContextValue: ProfileContextObject = {\n    profileOwner: null,\n    setProfileOwner: () => {},\n};\n\nconst ProfileContext = createContext<ProfileContextObject>(defaultProfileContextValue);\n\nconst ProfileContextProvider: FunctionComponent<Props> = ({ children }) => {\n    const [profileOwner, setProfileOwner] = useState<SearchedUser | null>(null);\n\n    const ProfileContextValue: ProfileContextObject = useMemo(() => {\n        const value = { profileOwner, setProfileOwner };\n        return value;\n    }, [profileOwner, setProfileOwner]);\n    return <ProfileContext.Provider value={ProfileContextValue}>{children}</ProfileContext.Provider>;\n};\n\nexport { ProfileContext, ProfileContextProvider };\n","import {\n    AppBar,\n    createStyles,\n    fade,\n    InputBase,\n    makeStyles,\n    Paper,\n    Theme,\n    Toolbar,\n    Typography,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { SearchedUser } from \"../../../../interfaces/user.interfaces\";\nimport api from \"../../api\";\nimport AvatarMenu from \"./AvatarMenu\";\nimport SingleSearchResult from \"./SingleSearchResult\";\nimport { ProfileContext } from \"../Profile/ProfileContext\";\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        grow: {\n            flexGrow: 1,\n        },\n        search: {\n            position: \"relative\",\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade(theme.palette.common.white, 0.15),\n            \"&:hover\": {\n                backgroundColor: fade(theme.palette.common.white, 0.25),\n            },\n            marginRight: theme.spacing(2),\n            marginLeft: 0,\n            width: \"100%\",\n            [theme.breakpoints.up(\"sm\")]: {\n                marginLeft: theme.spacing(3),\n                width: \"auto\",\n            },\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: \"100%\",\n            position: \"absolute\",\n            pointerEvents: \"none\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n        },\n        inputRoot: {\n            color: \"inherit\",\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 0),\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create(\"width\"),\n            width: \"100%\",\n            [theme.breakpoints.up(\"md\")]: {\n                width: \"20ch\",\n            },\n        },\n        result: {\n            \"&:hover\": {\n                backgroundColor: \"#ffffff\",\n                cursor: \"pointer\",\n            },\n        },\n        resultContainer: {\n            position: \"absolute\",\n            width: \"100%\",\n            maxHeight: 200,\n            backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n            overflowY: \"auto\",\n        },\n    }),\n);\nconst NavBar = () => {\n    const [searchResults, setSearchResults] = useState<SearchedUser[]>([]);\n    const [displayResults, setDisplayResults] = useState<boolean>(false);\n\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n    const { signOut, user } = useContext(AuthContext);\n    const { setProfileOwner } = useContext(ProfileContext);\n    const history = useHistory();\n    const classes = useStyles();\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const pickUser = (user: SearchedUser) => {\n        setProfileOwner(user);\n        setDisplayResults(false);\n        history.push(`/profile/${user._id}`);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const goToProfile = () => {\n        setAnchorEl(null);\n        setProfileOwner(null);\n        history.push(\"/\");\n    };\n\n    const goToAdd = () => {\n        setAnchorEl(null);\n        history.push(\"/add-post\");\n    };\n\n    const handleSignOut = async () => {\n        await signOut();\n\n        setAnchorEl(null);\n    };\n\n    const handleChange = async (e: { target: { value: string } }) => {\n        try {\n            const results = await api.get(`users/search/${e.target.value}`);\n            setSearchResults(results.data.data);\n            setDisplayResults(results.data.data.length > 0);\n        } catch (error) {\n            setSearchResults([]);\n        }\n    };\n    const resultsContainer = useRef<HTMLElement | undefined>();\n    const pageClick = (e: any) => {\n        if (resultsContainer.current && !resultsContainer.current!.contains(e.target)) {\n            setDisplayResults(false);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener(\"mousedown\", pageClick, false);\n    }, []);\n\n    return (\n        <AppBar>\n            <Toolbar style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                <Typography variant=\"h6\" style={{ fontWeight: 900 }}>\n                    KERPICH\n                </Typography>\n                {user && (\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ \"aria-label\": \"search\" }}\n                            onChange={handleChange}\n                        />\n                        {displayResults && (\n                            <Paper className={classes.resultContainer} ref={resultsContainer}>\n                                {searchResults.map((user: SearchedUser, i: number) => {\n                                    return <SingleSearchResult user={user} pickUser={pickUser} key={i} />;\n                                })}\n                            </Paper>\n                        )}\n                    </div>\n                )}\n                {user && (\n                    <AvatarMenu\n                        handleClick={handleClick}\n                        handleClose={handleClose}\n                        anchorEl={anchorEl}\n                        goToProfile={goToProfile}\n                        goToAdd={goToAdd}\n                        handleSignOut={handleSignOut}\n                    />\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default NavBar;\n","import { Grid, Paper, Typography, useMediaQuery, makeStyles } from \"@material-ui/core\";\nimport React, { FunctionComponent } from \"react\";\n\ntype PostCanvasType = {\n    textContent: string;\n    fontFamily: string;\n    color: string;\n    backgroundColor: string;\n    fontWeight: number;\n    fontSize: number;\n    textAlign: \"left\" | \"right\" | \"justify\" | \"center\";\n};\n\nconst PostCanvas: FunctionComponent<PostCanvasType> = ({\n    backgroundColor,\n    color,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    textAlign,\n    textContent,\n}) => {\n    const isBigScreen = useMediaQuery(\"(min-width: 650px)\");\n    const useStyles = makeStyles({\n        wrapper: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            overflow: \"hidden\",\n            width: !isBigScreen ? 330 : 600,\n            height: !isBigScreen ? 220 : 400,\n            backgroundColor,\n            margin: \"auto\",\n        },\n        text: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            overflow: \"hidden\",\n            width: !isBigScreen ? 330 : 600,\n            height: !isBigScreen ? 220 : 400,\n            fontFamily,\n            color,\n            fontWeight,\n            fontSize: isBigScreen ? fontSize : fontSize * 0.55,\n            margin: \"auto\",\n            textAlign,\n        },\n    });\n    const classes = useStyles();\n\n    return (\n        <Grid container justify=\"center\">\n            <Grid item md={12}>\n                <Paper elevation={3} className={classes.wrapper}>\n                    <Typography className={classes.text}>{textContent}</Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PostCanvas;\n","import { Typography } from \"@material-ui/core\";\nimport React, { Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport { SliderPicker, ColorResult } from \"react-color\";\n\ntype ColorSelectProps = {\n    label: string;\n    color: string;\n    setColor: Dispatch<SetStateAction<string>>;\n};\n\nconst ColorSelect: FunctionComponent<ColorSelectProps> = ({ label, color, setColor }) => {\n    return (\n        <>\n            <Typography variant=\"caption\">{label}</Typography>\n            <SliderPicker color={color} onChangeComplete={(color: ColorResult) => setColor(color.hex)} />\n        </>\n    );\n};\n\nexport default ColorSelect;\n","import { MenuItem, Select } from \"@material-ui/core\";\nimport React, { Dispatch, FunctionComponent, SetStateAction } from \"react\";\n\ntype FontFamilySelectProps = {\n    setFontFamily: Dispatch<SetStateAction<string>>;\n    setFontWeightValues: Dispatch<SetStateAction<Array<number>>>;\n};\n\ninterface fontInfo {\n    label: string;\n    value: string;\n    options: number[];\n}\n\nconst FontFamilySelect: FunctionComponent<FontFamilySelectProps> = ({ setFontFamily, setFontWeightValues }) => {\n    const fontFamilies: fontInfo[] = [\n        {\n            label: \"Caveat\",\n            value: \"Caveat\",\n            options: [400, 700],\n        },\n        {\n            label: \"Dancing Script\",\n            value: \"Dancing Script\",\n            options: [400, 700],\n        },\n        {\n            label: \"Kalam\",\n            value: \"Kalam\",\n            options: [300, 400, 700],\n        },\n        {\n            label: \"Lemonada\",\n            value: \"Lemonada\",\n            options: [300, 400, 700],\n        },\n        {\n            label: \"Lobster\",\n            value: \"Lobster\",\n            options: [400, 700],\n        },\n        {\n            label: \"Montserrat\",\n            value: \"Montserrat\",\n            options: [100, 400, 700, 900],\n        },\n        {\n            label: \"Montserrat Alternates\",\n            value: \"Montserrat Alternates\",\n            options: [100, 400, 700, 900],\n        },\n        {\n            label: \"Permanent Marker\",\n            value: \"Permanent Marker\",\n            options: [400],\n        },\n        {\n            label: \"Roboto\",\n            value: \"Roboto\",\n            options: [100, 400, 900],\n        },\n        {\n            label: \"Sansita Swashed\",\n            value: \"Sansita Swashed\",\n            options: [400, 700, 900],\n        },\n    ];\n\n    const handleChange = (index: number) => {\n        setFontFamily(fontFamilies[index].value);\n        setFontWeightValues(fontFamilies[index].options);\n    };\n\n    return (\n        <Select fullWidth defaultValue={8} onChange={(e) => handleChange(Number(e.target.value))}>\n            {fontFamilies.map((font: fontInfo, i: number) => {\n                return (\n                    <MenuItem value={i} key={i}>\n                        {font.label}\n                    </MenuItem>\n                );\n            })}\n        </Select>\n    );\n};\n\nexport default FontFamilySelect;\n","import { MenuItem, Select } from \"@material-ui/core\";\nimport React, { Dispatch, FunctionComponent, SetStateAction } from \"react\";\n\ntype FontSizeSelectProps = {\n    fontSize: number;\n    setFontSize: Dispatch<SetStateAction<number>>;\n};\n\nconst FontSizeSelect: FunctionComponent<FontSizeSelectProps> = ({ fontSize, setFontSize }) => {\n    const fontSizes: number[] = [16, 20, 22, 24, 28, 32, 36, 40, 48, 56, 64, 72, 144];\n    return (\n        <Select fullWidth defaultValue={fontSize} onChange={(e) => setFontSize(Number(e.target.value))}>\n            {fontSizes.map((size: number, i: number) => {\n                return (\n                    <MenuItem value={size} key={i}>\n                        {size}\n                    </MenuItem>\n                );\n            })}\n        </Select>\n    );\n};\n\nexport default FontSizeSelect;\n","import { MenuItem, Select } from \"@material-ui/core\";\nimport React, { Dispatch, FunctionComponent, SetStateAction, useEffect } from \"react\";\n\ntype FontWeightSelectProps = {\n    fontWeightValues: number[];\n    fontWeight: number;\n    setFontWeight: Dispatch<SetStateAction<number>>;\n};\n\nconst FontWeightSelect: FunctionComponent<FontWeightSelectProps> = ({\n    fontWeight,\n    fontWeightValues,\n    setFontWeight,\n}) => {\n    useEffect(() => {\n        if (fontWeightValues.indexOf(fontWeight) === -1) {\n            setFontWeight(fontWeightValues[0]);\n        }\n    }, [fontWeight, setFontWeight, fontWeightValues]);\n    return (\n        <Select fullWidth onChange={(e) => setFontWeight(Number(e.target.value))} value={fontWeight}>\n            {fontWeightValues.map((value: number, i: number) => {\n                return (\n                    <MenuItem value={value} key={i}>\n                        {value}\n                    </MenuItem>\n                );\n            })}\n        </Select>\n    );\n};\n\nexport default FontWeightSelect;\n","import { MenuItem, Select } from \"@material-ui/core\";\nimport React, { ChangeEvent, Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport { capitalizeFirst } from \"../../utils\";\n\ntype TextAlignSelectProps = {\n    textAlign: \"left\" | \"right\" | \"justify\" | \"center\";\n    setTextAlign: Dispatch<SetStateAction<\"left\" | \"right\" | \"justify\" | \"center\">>;\n};\n\nconst TextAlignSelect: FunctionComponent<TextAlignSelectProps> = ({ textAlign, setTextAlign }) => {\n    const textAlignValues = [\"left\", \"right\", \"justify\", \"center\"];\n    const handleChange = (e: ChangeEvent<{ name?: string; value: unknown }>) => {\n        const value: \"left\" | \"right\" | \"justify\" | \"center\" = e.target.value as\n            | \"left\"\n            | \"right\"\n            | \"justify\"\n            | \"center\";\n        setTextAlign(value);\n    };\n    return (\n        <Select defaultValue={textAlign} onChange={handleChange} fullWidth>\n            {textAlignValues.map((value: string, i: number) => {\n                return (\n                    <MenuItem value={value} key={i}>\n                        {capitalizeFirst(value)}\n                    </MenuItem>\n                );\n            })}\n        </Select>\n    );\n};\n\nexport default TextAlignSelect;\n","export const capitalizeFirst = (s: string) => {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n","import { TextField } from \"@material-ui/core\";\nimport React, { Dispatch, FunctionComponent, SetStateAction } from \"react\";\n\ntype TextContentInputProps = {\n    textContent: string;\n    setTextContent: Dispatch<SetStateAction<string>>;\n};\n\nconst TextContentInput: FunctionComponent<TextContentInputProps> = ({ textContent, setTextContent }) => {\n    return (\n        <TextField\n            id=\"standard-basic\"\n            label=\"Text\"\n            type=\"text\"\n            onChange={(e: { target: { value: any } }) => setTextContent(e.target.value)}\n            value={textContent}\n            fullWidth\n        />\n    );\n};\n\nexport default TextContentInput;\n","import { Button, Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\nimport React, { Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ColorSelect from \"./ColorSelect\";\nimport FontFamilySelect from \"./FontFamilySelect\";\nimport FontSizeSelect from \"./FontSizeSelect\";\nimport FontWeightSelect from \"./FontWeightSelect\";\nimport TextAlignSelect from \"./TextAlignSelect\";\nimport TextContentInput from \"./TextContentInput\";\n\nexport type PostAttributesProps = {\n    textContent: string;\n    setTextContent: Dispatch<SetStateAction<string>>;\n    setFontFamily: Dispatch<SetStateAction<string>>;\n    color: string;\n    setColor: Dispatch<SetStateAction<string>>;\n    backgroundColor: string;\n    setBackgroundColor: Dispatch<SetStateAction<string>>;\n    fontWeight: number;\n    setFontWeight: Dispatch<SetStateAction<number>>;\n    fontSize: number;\n    setFontSize: Dispatch<SetStateAction<number>>;\n    textAlign: \"left\" | \"right\" | \"justify\" | \"center\";\n    setTextAlign: Dispatch<SetStateAction<\"left\" | \"right\" | \"justify\" | \"center\">>;\n    addPost: () => Promise<void>;\n    fontWeightValues: number[];\n    setFontWeightValues: Dispatch<SetStateAction<Array<number>>>;\n};\n\nconst PostAttributes: FunctionComponent<PostAttributesProps> = ({\n    textContent,\n    setTextContent,\n    setFontFamily,\n    color,\n    setColor,\n    backgroundColor,\n    setBackgroundColor,\n    fontWeight,\n    setFontWeight,\n    fontSize,\n    setFontSize,\n    textAlign,\n    setTextAlign,\n    addPost,\n    fontWeightValues,\n    setFontWeightValues,\n}) => {\n    const history = useHistory();\n    const isBigScreen = useMediaQuery(\"(min-width: 650px)\");\n    const useStyles = makeStyles({\n        container: isBigScreen\n            ? {\n                  maxWidth: \"500px\",\n                  margin: \"auto\",\n              }\n            : { marginTop: 30 },\n    });\n    const classes = useStyles();\n    return (\n        <Grid container direction=\"row\" spacing={5} className={classes.container}>\n            <Grid container justify=\"space-around\" direction=\"row\">\n                <Grid item xs={6}>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Button color=\"primary\" variant=\"contained\" onClick={addPost}>\n                                Share\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={6}>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Button color=\"secondary\" variant=\"contained\" onClick={() => history.goBack()}>\n                                Cancel\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <TextContentInput textContent={textContent} setTextContent={setTextContent} />\n            </Grid>\n            <Grid item xs={6}>\n                <FontFamilySelect setFontFamily={setFontFamily} setFontWeightValues={setFontWeightValues} />\n            </Grid>\n            <Grid item xs={6}>\n                <FontWeightSelect\n                    fontWeight={fontWeight}\n                    setFontWeight={setFontWeight}\n                    fontWeightValues={fontWeightValues}\n                />\n            </Grid>\n            <Grid item xs={6}>\n                <FontSizeSelect fontSize={fontSize} setFontSize={setFontSize} />\n            </Grid>\n            <Grid item xs={6}>\n                <TextAlignSelect textAlign={textAlign} setTextAlign={setTextAlign} />\n            </Grid>\n\n            <Grid item lg={6} xs={12}>\n                <ColorSelect label=\"Color\" color={color} setColor={setColor} />\n            </Grid>\n            <Grid item lg={6} xs={12}>\n                <ColorSelect label=\"Backgound Color\" color={backgroundColor} setColor={setBackgroundColor} />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PostAttributes;\n","import { Grid, makeStyles, useMediaQuery } from \"@material-ui/core\";\nimport React, { useState, useContext } from \"react\";\nimport PostCanvas from \"../Post/PostCanvas\";\nimport PostAttributes from \"./PostAttributes\";\nimport { IPostInterface } from \"../../../../interfaces/post.interfaces\";\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport api from \"../../api\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AddPost = () => {\n    const { user } = useContext(AuthContext);\n    const history = useHistory();\n    const [textContent, setTextContent] = useState<string>(\"\");\n    const [fontFamily, setFontFamily] = useState<string>(\"Roboto\");\n    const [color, setColor] = useState<string>(\"#000000\");\n    const [backgroundColor, setBackgroundColor] = useState<string>(\"#ffffff\");\n    const [fontWeight, setFontWeight] = useState<number>(400);\n    const [fontSize, setFontSize] = useState<number>(16);\n    const [textAlign, setTextAlign] = useState<\"left\" | \"right\" | \"justify\" | \"center\">(\"left\");\n    const [fontWeightValues, setFontWeightValues] = useState<Array<number>>([100, 400, 900]);\n    const isBigScreen = useMediaQuery(\"(min-width: 650px)\");\n    const useStyles = makeStyles({\n        container: {\n            padding: isBigScreen ? \"100px 120px\" : \"20px\",\n        },\n    });\n    const classes = useStyles();\n    const addPost = async (): Promise<void> => {\n        const post: IPostInterface = {\n            author: {\n                user_id: user!._id,\n                userName: user!.userName,\n                image: user!.image || \"\",\n            },\n            likes: [],\n            textContent,\n            style: {\n                backgroundColor,\n                color,\n                fontFamily,\n                fontSize,\n                fontWeight,\n                textAlign,\n            },\n        };\n        try {\n            await api.post(\"posts\", post);\n            history.goBack();\n        } catch (error) {\n            throw error;\n        }\n    };\n    return (\n        <Grid container justify=\"center\" spacing={2} alignItems=\"center\" direction=\"row\" className={classes.container}>\n            <Grid item md={12} lg={7}>\n                <PostCanvas\n                    backgroundColor={backgroundColor}\n                    color={color}\n                    fontFamily={fontFamily}\n                    fontSize={fontSize}\n                    fontWeight={fontWeight}\n                    textAlign={textAlign}\n                    textContent={textContent}\n                />\n            </Grid>\n            <Grid item md={12} lg={5}>\n                <PostAttributes\n                    backgroundColor={backgroundColor}\n                    color={color}\n                    fontSize={fontSize}\n                    fontWeight={fontWeight}\n                    setBackgroundColor={setBackgroundColor}\n                    setColor={setColor}\n                    setFontFamily={setFontFamily}\n                    setFontSize={setFontSize}\n                    setFontWeight={setFontWeight}\n                    setTextAlign={setTextAlign}\n                    setTextContent={setTextContent}\n                    textAlign={textAlign}\n                    textContent={textContent}\n                    addPost={addPost}\n                    fontWeightValues={fontWeightValues}\n                    setFontWeightValues={setFontWeightValues}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default AddPost;\n","import { Button, Grid, makeStyles, TextField } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport React, { Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport api from \"../../api\";\nimport { UserInterface } from \"../../../../interfaces/user.interfaces\";\n\nexport type RegisterProps = {\n    register: (user: UserInterface) => void;\n    setShowSignin: Dispatch<SetStateAction<boolean>>;\n    userNameInput: string;\n    setUserNameInput: Dispatch<SetStateAction<string>>;\n};\n\nconst useStyles = makeStyles({\n    container: {\n        overflowX: \"auto\",\n        minHeight: \" 100vh\",\n    },\n});\n\nconst Register: FunctionComponent<RegisterProps> = ({ register, setShowSignin, userNameInput, setUserNameInput }) => {\n    const classes = useStyles();\n    const formik = useFormik({\n        validateOnBlur: true,\n        validateOnChange: false,\n        initialValues: { firstName: \"\", lastName: \"\", userName: \"\", email: \"\", password: \"\", password2: \"\" },\n        onSubmit: () => {\n            const user: UserInterface = {\n                ...formik.values,\n                displayName: formik.values.firstName + \" \" + formik.values.lastName,\n            };\n            register(user);\n        },\n        validationSchema: Yup.object({\n            firstName: Yup.string()\n                .min(2, \"Must be at least two chaeacters\")\n                .max(30, \"Must be maximum 30 characters or less\")\n                .required(\"Required\")\n                .trim(),\n            lastName: Yup.string()\n                .min(2, \"Must be at least two chaeacters\")\n                .max(30, \"Must be maximum 30 characters or less\")\n                .required(\"Required\")\n                .trim(),\n            userName: Yup.string()\n                .min(3, \"Must be at least three chaeacters\")\n                .max(30, \"Must be maximum 30 characters or less\")\n                .required(\"Required\")\n                .test(\"check user name\", \"This username is not available\", async (value: string | null | undefined) => {\n                    if (value && value !== userNameInput) {\n                        setUserNameInput(value);\n                        return api\n                            .post(\"users/username\", { value })\n                            .then((data) => data.data)\n                            .catch((error) => false);\n                    }\n                    return value;\n                })\n                .trim(),\n            password: Yup.string()\n                .trim()\n                // .matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/)\n                .required(),\n            password2: Yup.string()\n                .trim()\n                .oneOf([Yup.ref(\"password\"), \"\"], \"Passwords must match\")\n                .required(),\n            email: Yup.string().email(\"Invalid email address\").required(\"Required\").trim(),\n        }),\n    });\n\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault();\n                formik.handleSubmit();\n            }}\n        >\n            <Grid\n                container\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n                direction=\"column\"\n                className={classes.container}\n            >\n                <Grid item>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"First Name\"\n                        type=\"text\"\n                        name=\"firstName\"\n                        onChange={formik.handleChange}\n                        value={formik.values.firstName}\n                        error={formik.touched.firstName && formik.errors.firstName ? true : false}\n                        helperText={formik.touched.firstName ? formik.errors.firstName : undefined}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Last Name\"\n                        type=\"text\"\n                        name=\"lastName\"\n                        onChange={formik.handleChange}\n                        value={formik.values.lastName}\n                        error={formik.touched.lastName && formik.errors.lastName ? true : false}\n                        helperText={formik.touched.lastName ? formik.errors.lastName : undefined}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"User Name\"\n                        type=\"text\"\n                        name=\"userName\"\n                        onChange={formik.handleChange}\n                        value={formik.values.userName}\n                        error={formik.touched.userName && formik.errors.userName ? true : false}\n                        helperText={formik.touched.userName ? formik.errors.userName : undefined}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Email\"\n                        type=\"text\"\n                        name=\"email\"\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                        error={formik.touched.email && formik.errors.email ? true : false}\n                        helperText={formik.touched.email ? formik.errors.email : undefined}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Password\"\n                        type=\"Password\"\n                        name=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                        error={formik.touched.password && formik.errors.password ? true : false}\n                        helperText={\n                            formik.touched.password\n                                ? formik.errors.password\n                                    ? \"Invalid password\"\n                                    : undefined\n                                : undefined\n                        }\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Confirm Password\"\n                        type=\"Password\"\n                        name=\"password2\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password2}\n                        error={formik.touched.password2 && formik.errors.password2 ? true : false}\n                        helperText={formik.touched.password2 ? formik.errors.password2 : undefined}\n                    />\n                </Grid>\n                <Grid item>\n                    <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n                        Register\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Button id=\"signinButton\" color=\"primary\" variant=\"contained\" onClick={() => setShowSignin(true)}>\n                        SignIn\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nexport default Register;\n","import { Button, Grid, TextField } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport React, { Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport { SignInUser } from \"../../../../interfaces/user.interfaces\";\n\nexport type SignInProps = {\n    setShowSignin: Dispatch<SetStateAction<boolean>>;\n    signin: (user: SignInUser) => void;\n};\n\nconst SignIn: FunctionComponent<SignInProps> = ({ setShowSignin, signin }) => {\n    const formik = useFormik({\n        validateOnBlur: true,\n        validateOnChange: false,\n        initialValues: { email: \"\", password: \"\" },\n        onSubmit: () => {\n            signin(formik.values);\n        },\n        validationSchema: Yup.object({\n            email: Yup.string().email(\"Invalid email address\").required(\"Required\").trim(),\n            password: Yup.string().trim().required(),\n        }),\n    });\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault();\n                formik.handleSubmit();\n            }}\n        >\n            <Grid\n                container\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n                direction=\"column\"\n                style={{ overflowX: \"auto\", minHeight: \" 100vh\" }}\n            >\n                <Grid item>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Email\"\n                        type=\"Email\"\n                        name=\"email\"\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                        error={formik.touched.email && formik.errors.email ? true : false}\n                        helperText={formik.touched.email ? formik.errors.email : undefined}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Password\"\n                        type=\"Password\"\n                        name=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                        error={formik.touched.password && formik.errors.email ? true : false}\n                        helperText={formik.touched.password ? formik.errors.password : undefined}\n                    />\n                </Grid>\n                <Grid item>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\">\n                        Sign In\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        onClick={() => {\n                            setShowSignin(false);\n                        }}\n                    >\n                        Register\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nexport default SignIn;\n","import { Container, Typography } from \"@material-ui/core\";\nimport React, { useCallback, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { SignInUser, UserInterface } from \"../../../../interfaces/user.interfaces\";\nimport api from \"../../api\";\nimport { AuthContext } from \"./AuthContext\";\nimport Register from \"./Register\";\nimport SignIn from \"./SignIn\";\n\nconst Landing = () => {\n    const [showSignin, setShowSignin] = useState<boolean>(true);\n    const [error, setError] = useState<boolean>(false);\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n    const { setAuthenticated, setUser } = useContext(AuthContext);\n    const [userNameInput, setUserNameInput] = useState<string>(\"\");\n    const history = useHistory();\n\n    const register = useCallback(async (user: UserInterface) => {\n        try {\n            const response = await api.post(\"auth/register\", user);\n            setShowSignin(response.status === 200);\n        } catch (error) {\n            setError(true);\n            setErrorMessage(error.message);\n        }\n    }, []);\n\n    const signin = useCallback(\n        async (user: SignInUser) => {\n            try {\n                console.log(\"object\", user);\n                const response = await api.post(\"auth/signin\", user);\n                setAuthenticated(response.data.isAuthenticated);\n                setUser(response.data.user);\n                history.push(\"/\");\n            } catch (error) {\n                setError(true);\n                setErrorMessage(error.message);\n            }\n        },\n        [setAuthenticated, setUser, history],\n    );\n\n    return (\n        <Container maxWidth=\"sm\">\n            {error && <Typography color=\"secondary\">{errorMessage}</Typography>}\n            {showSignin ? (\n                <SignIn signin={signin} setShowSignin={setShowSignin} />\n            ) : (\n                <Register\n                    register={register}\n                    setShowSignin={setShowSignin}\n                    userNameInput={userNameInput}\n                    setUserNameInput={setUserNameInput}\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default Landing;\n","import { Avatar, Card, CardActions, CardContent, CardHeader, IconButton, makeStyles } from \"@material-ui/core\";\nimport React, { FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport { BasePostDocument } from \"../../../../interfaces/post.interfaces\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport PostCanvas from \"./PostCanvas\";\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport api from \"../../api\";\nimport { ProfileContext } from \"../Profile/ProfileContext\";\nimport { useHistory } from \"react-router-dom\";\n\nexport type PostDisplayProps = {\n    post: BasePostDocument;\n    fetch: () => Promise<void>;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: 640,\n    },\n    icon: {\n        color: theme.palette.secondary.dark,\n    },\n    header: {\n        cursor: \"pointer\",\n    },\n}));\n\nconst PostDisplay: FunctionComponent<PostDisplayProps> = ({ post, fetch }) => {\n    const classes = useStyles();\n    const { user } = useContext(AuthContext);\n    const { profileOwner } = useContext(ProfileContext);\n    const { style, textContent, likes } = post;\n    const { backgroundColor, color, fontFamily, fontSize, fontWeight, textAlign } = style;\n    const [liked, setLiked] = useState<boolean | null>(null);\n    const { push } = useHistory();\n    const handleLike = async () => {\n        try {\n            const response = await api.put(`/posts/${post._id}/like`, { like: !liked });\n            if (!response.data.error) {\n                setLiked(response.data.data.likes.indexOf(user!._id) > -1);\n                if (!profileOwner) {\n                    fetch();\n                }\n            }\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    useEffect(() => {\n        const like = likes.indexOf(user!._id) > -1;\n        setLiked(like);\n    }, [likes, user, post._id]);\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                avatar={<Avatar aria-label=\"recipe\" src={post.author.image} />}\n                title={post.author.userName}\n                subheader={\n                    new Date(post.createdAt!).toDateString() + \" \" + new Date(post.createdAt!).toLocaleTimeString()\n                }\n                onClick={() => push(`${post.author.user_id}`)}\n                className={classes.header}\n            />\n            <CardContent>\n                <PostCanvas\n                    backgroundColor={backgroundColor}\n                    color={color}\n                    fontFamily={fontFamily}\n                    fontSize={fontSize}\n                    fontWeight={fontWeight}\n                    textAlign={textAlign as \"left\" | \"right\" | \"justify\" | \"center\"}\n                    textContent={textContent}\n                />\n            </CardContent>\n            <CardActions disableSpacing>\n                <IconButton aria-label=\"like\" onClick={handleLike} className={classes.icon}>\n                    {liked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                </IconButton>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default PostDisplay;\n","import { Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { FunctionComponent, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProfileContext } from \"./ProfileContext\";\n\nconst useStyles = makeStyles({\n    item: { textAlign: \"center\", marginTop: \"30%\" },\n});\n\ntype EmptyProfileProps = {\n    activeTab: \"feed\" | \"posts\" | \"likes\";\n};\n\nconst EmptyProfile: FunctionComponent<EmptyProfileProps> = ({ activeTab }) => {\n    const { profileOwner } = useContext(ProfileContext);\n    const history = useHistory();\n    const classes = useStyles();\n    const goToAddPost = () => {\n        history.push(\"/add-post\");\n    };\n\n    const renderMessage = (): string => {\n        if (activeTab === \"feed\") {\n            return \"You don't follow any users. Use search to find others and follow them so that you can see their posts on ypur feed.\";\n        }\n        if (activeTab === \"posts\") {\n            return (profileOwner ? profileOwner.displayName + \" doesn't \" : \"You don't \") + \"have any posts yet.\";\n        }\n        return (profileOwner ? profileOwner.displayName + \" hasn't\" : \"You haven't\") + \" liked any posts yet.\";\n    };\n    return (\n        <>\n            <Grid container justify=\"center\" alignContent=\"center\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" className={classes.item}>\n                        {renderMessage()}\n                    </Typography>\n                </Grid>\n                {!profileOwner && activeTab === \"posts\" && (\n                    <Grid item xs={12} className={classes.item}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={goToAddPost}>\n                            Add Post\n                        </Button>\n                    </Grid>\n                )}\n            </Grid>\n        </>\n    );\n};\n\nexport default EmptyProfile;\n","import { CircularProgress } from \"@material-ui/core\";\nimport React, { FunctionComponent, useEffect } from \"react\";\nimport { BasePostDocument } from \"../../../../interfaces/post.interfaces\";\nimport PostDisplay from \"./PostDisplay\";\nimport EmptyProfile from \"../Profile/EmptyProfile\";\n\nexport type PostContainerProps = {\n    posts: BasePostDocument[];\n    fetchLikedPosts: () => Promise<void>;\n    fetchFeed: () => Promise<void>;\n    fetchUserPosts: () => Promise<void>;\n    activeTab: \"feed\" | \"posts\" | \"likes\";\n    isLoading: boolean;\n};\n\nconst PostsContainer: FunctionComponent<PostContainerProps> = ({\n    posts,\n    fetchLikedPosts,\n    fetchFeed,\n    fetchUserPosts,\n    activeTab,\n    isLoading,\n}): JSX.Element => {\n    useEffect(() => {\n        if (activeTab === \"feed\") {\n            fetchFeed();\n        }\n        if (activeTab === \"posts\") {\n            fetchUserPosts();\n        }\n        if (activeTab === \"likes\") {\n            fetchLikedPosts();\n        }\n    }, [activeTab, fetchFeed, fetchUserPosts, fetchLikedPosts]);\n    return isLoading ? (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <CircularProgress />\n        </div>\n    ) : (\n        <>\n            {posts.length > 0 ? (\n                posts.map((post: BasePostDocument, i: number) => {\n                    return <PostDisplay post={post} fetch={fetchLikedPosts} key={i} />;\n                })\n            ) : (\n                <EmptyProfile activeTab={activeTab} />\n            )}\n        </>\n    );\n};\n\nexport default PostsContainer;\n","import { Button, Grid, makeStyles } from \"@material-ui/core\";\nimport React, { Dispatch, FunctionComponent, SetStateAction, useContext } from \"react\";\nimport { ProfileContext } from \"./ProfileContext\";\n\ntype PostTabsProps = {\n    activeTab: \"feed\" | \"posts\" | \"likes\";\n    setActiveTab: Dispatch<SetStateAction<\"feed\" | \"posts\" | \"likes\">>;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        textAlign: \"center\",\n    },\n    activeTab: {\n        textAlign: \"center\",\n        backgroundColor: theme.palette.primary.dark,\n    },\n    activeButton: {\n        color: \"#ffffff\",\n    },\n}));\n\nconst PostTabs: FunctionComponent<PostTabsProps> = ({ activeTab, setActiveTab }) => {\n    const { profileOwner } = useContext(ProfileContext);\n    const classes = useStyles();\n    return (\n        <Grid container direction=\"row\">\n            {!profileOwner && (\n                <Grid item xs={4} className={activeTab === \"feed\" ? classes.activeTab : classes.icon}>\n                    <Button\n                        color=\"primary\"\n                        onClick={() => {\n                            setActiveTab(\"feed\");\n                        }}\n                        className={activeTab === \"feed\" ? classes.activeButton : undefined}\n                        fullWidth\n                        id=\"feedButton\"\n                    >\n                        Feed\n                    </Button>\n                </Grid>\n            )}\n            <Grid item xs={profileOwner ? 6 : 4} className={activeTab === \"posts\" ? classes.activeTab : classes.icon}>\n                <Button\n                    color=\"primary\"\n                    onClick={() => {\n                        setActiveTab(\"posts\");\n                    }}\n                    className={activeTab === \"posts\" ? classes.activeButton : undefined}\n                    fullWidth\n                    id=\"postsButton\"\n                >\n                    Posts\n                </Button>\n            </Grid>\n            <Grid item xs={profileOwner ? 6 : 4} className={activeTab === \"likes\" ? classes.activeTab : classes.icon}>\n                <Button\n                    color=\"primary\"\n                    onClick={() => setActiveTab(\"likes\")}\n                    className={activeTab === \"likes\" ? classes.activeButton : undefined}\n                    fullWidth\n                    id=\"likesButton\"\n                >\n                    Likes\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PostTabs;\n","import { Avatar, Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { FunctionComponent, useContext } from \"react\";\nimport api from \"../../api\";\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport { ProfileContext } from \"./ProfileContext\";\n\nconst useStyle = makeStyles({\n    buttonWrapper: {\n        textAlign: \"center\",\n    },\n});\n\nconst ProfileOwner: FunctionComponent<{}> = () => {\n    const { user } = useContext(AuthContext);\n    const { profileOwner, setProfileOwner } = useContext(ProfileContext);\n    const classes = useStyle();\n\n    const handleFollow = async () => {\n        try {\n            const response = await api.put(`users/${profileOwner?._id}/follow`);\n            if (response.data.error) {\n                throw new Error(response.data.message);\n            }\n            setProfileOwner(response.data.data);\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const handleUnfollow = async () => {\n        try {\n            const response = await api.put(`users/${profileOwner?._id}/unfollow`);\n            if (response.data.error) {\n                throw new Error(response.data.message);\n            }\n            setProfileOwner(response.data.data);\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    return (\n        profileOwner && (\n            <Grid container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <Avatar src={profileOwner.image} />\n                </Grid>\n                <Grid item xs={6}>\n                    <Grid item>\n                        <Typography variant=\"body1\">{profileOwner.displayName}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"subtitle2\">{profileOwner.userName}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid item xs={4} className={classes.buttonWrapper}>\n                    {profileOwner.followers?.indexOf(user!._id) === -1 ? (\n                        <Button color=\"primary\" variant=\"contained\" onClick={handleFollow}>\n                            FOLLOW\n                        </Button>\n                    ) : (\n                        <Button color=\"secondary\" variant=\"contained\" onClick={handleUnfollow}>\n                            UNFOLLOW\n                        </Button>\n                    )}\n                </Grid>\n            </Grid>\n        )\n    );\n};\n\nexport default ProfileOwner;\n","import { Container, Grid, makeStyles } from \"@material-ui/core\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { BasePostDocument } from \"../../../../interfaces/post.interfaces\";\nimport api from \"../../api\";\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport PostsContainer from \"../Post/PostsContainer\";\nimport PostTabs from \"./PostTabs\";\nimport { ProfileContext } from \"./ProfileContext\";\nimport ProfileOwner from \"./ProfileOwner\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: { display: \"flex\", justifyContent: \"center\" },\n    grid: { width: 640 },\n    icon: {\n        textAlign: \"center\",\n    },\n    activeTab: {\n        textAlign: \"center\",\n        backgroundColor: theme.palette.primary.dark,\n    },\n    activeButton: {\n        color: \"#ffffff\",\n    },\n}));\n\nconst Profile = () => {\n    const { user } = useContext(AuthContext);\n    const { profileOwner, setProfileOwner } = useContext(ProfileContext);\n    const [feed, setFeed] = useState<BasePostDocument[]>([]);\n    const [posts, setPosts] = useState<BasePostDocument[]>([]);\n    const [likes, setLikes] = useState<BasePostDocument[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [activeTab, setActiveTab] = useState<\"feed\" | \"posts\" | \"likes\">(\"feed\");\n    const [postsToRender, setPostsToRender] = useState<BasePostDocument[]>([]);\n    const [displayedId, setDisplayedId] = useState<string | null>(null);\n    const classes = useStyles();\n    const { pathname } = useLocation();\n    const fetchFeed = useCallback(async () => {\n        if (!profileOwner) {\n            setIsLoading(true);\n            try {\n                const result = await api.get(`posts/${user?._id}/feed`);\n                setFeed([...result.data.data]);\n                setIsLoading(false);\n            } catch (error) {\n                setIsLoading(false);\n                throw error;\n            }\n        }\n    }, [user, profileOwner]);\n\n    const fetchUserPosts = useCallback(async () => {\n        setIsLoading(true);\n        const id = profileOwner ? profileOwner._id : user?._id;\n        try {\n            const result = await api.get(`posts/user/${id}`);\n            setPosts([...result.data.data]);\n            setIsLoading(false);\n        } catch (error) {\n            setIsLoading(false);\n            throw error;\n        }\n    }, [profileOwner, user]);\n\n    const fetchLikedPosts = useCallback(async () => {\n        setIsLoading(true);\n        const id = profileOwner ? profileOwner._id : user?._id;\n        try {\n            const result = await api.get(`/posts/likedbyuser/${id}`);\n            setLikes([...result.data.data]);\n            setIsLoading(false);\n        } catch (error) {\n            setIsLoading(false);\n            throw error;\n        }\n    }, [profileOwner, user]);\n\n    const getProfileId = (path: string): string => {\n        let arr = path.split(\"/\");\n        const index = arr.indexOf(\"profile\");\n        if (index !== -1) {\n            return arr[index + 1];\n        }\n        return \"\";\n    };\n\n    const getProfile = async (id: string): Promise<void> => {\n        try {\n            const response = await api.get(`/users/${id}`);\n            setProfileOwner(response.data.data);\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const profileToRender = (id: string) => {\n        if (id === user?._id) {\n            setProfileOwner(null);\n        } else {\n            getProfile(id);\n        }\n    };\n\n    const updatePosts = useCallback(() => {\n        if (activeTab === \"feed\") {\n            setPostsToRender(feed);\n        }\n        if (activeTab === \"posts\") {\n            setPostsToRender(posts);\n        }\n        if (activeTab === \"likes\") {\n            setPostsToRender(likes);\n        }\n    }, [activeTab, feed, posts, likes]);\n\n    useEffect(() => {\n        let id: string = getProfileId(pathname);\n        if (id !== displayedId) {\n            setDisplayedId(id);\n            if (id !== \"\" && id !== profileOwner?._id) {\n                profileToRender(id);\n            }\n        }\n        if (profileOwner) {\n            setActiveTab(\"posts\");\n        }\n        updatePosts();\n    }, [profileOwner, activeTab, updatePosts, displayedId, pathname, profileToRender]);\n\n    return (\n        <Container maxWidth=\"md\" className={classes.container}>\n            <Grid container direction=\"column\" justify=\"center\" className={classes.grid}>\n                <Grid item>\n                    <div className={classes.container}>\n                        <ProfileOwner />\n                    </div>\n                </Grid>\n                <PostTabs activeTab={activeTab} setActiveTab={setActiveTab} />\n                <PostsContainer\n                    posts={postsToRender}\n                    fetchLikedPosts={fetchLikedPosts}\n                    activeTab={activeTab}\n                    fetchFeed={fetchFeed}\n                    fetchUserPosts={fetchUserPosts}\n                    isLoading={isLoading}\n                />\n            </Grid>\n        </Container>\n    );\n};\n\nexport default Profile;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { AuthContext } from \"../Auth/AuthContext\";\n\ntype ProtectedRouteProps = {\n    children: JSX.Element;\n    path: string;\n};\n\nconst ProtectedRoute: FunctionComponent<ProtectedRouteProps> = ({ children }) => {\n    const { authenticated } = useContext(AuthContext);\n\n    return (\n        <Route\n            render={({ location }) =>\n                authenticated ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default ProtectedRoute;\n","import { CircularProgress } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect, Route, RouteComponentProps, Router, Switch } from \"react-router-dom\";\nimport AddPost from \"../AddPost/AddPost\";\nimport { AuthContext } from \"../Auth/AuthContext\";\nimport Landing from \"../Auth/Landing\";\nimport Profile from \"../Profile/Profile\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nconst Routes = ({ history }: RouteComponentProps<{}>) => {\n    const [loading, setLoading] = useState<boolean>(true);\n    const { authenticated, user, isAuthenticated } = useContext(AuthContext);\n    const fetch = () => {\n        isAuthenticated()\n            .then(() => {\n                if (!authenticated) {\n                    history.push(\"/\");\n                }\n            })\n            .then(() => setLoading(false))\n            .catch((err) => console.log(\"Error: \", err));\n    };\n    useEffect(fetch, []);\n    return !loading ? (\n        <Router history={history}>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Redirect\n                        to={user && authenticated ? { pathname: `/profile/${user._id}` } : { pathname: \"/login\" }}\n                    />\n                </Route>\n                <Route path=\"/login\" component={Landing} />\n                <ProtectedRoute path=\"/profile/:id\">\n                    <Profile />\n                </ProtectedRoute>\n                <ProtectedRoute path=\"/add-post\">\n                    <AddPost />\n                </ProtectedRoute>\n            </Switch>\n        </Router>\n    ) : (\n        <div style={{ width: \"100\", height: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n            <CircularProgress />\n        </div>\n    );\n};\n\nexport default Routes;\n","import { createMuiTheme } from \"@material-ui/core\";\nimport \"fontsource-roboto\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#3949ab\",\n            light: \"#6e74dc\",\n            dark: \"#00227a\",\n        },\n        secondary: {\n            main: \"#e65100\",\n            light: \"#ff833a\",\n            dark: \"#ac1900\",\n        },\n    },\n    typography: {\n        fontFamily: \"roboto\",\n    },\n});\n\nexport default theme;\n","import { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport \"./App.css\";\nimport { AuthContextProvider } from \"./components/Auth/AuthContext\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { ProfileContextProvider } from \"./components/Profile/ProfileContext\";\nimport Routes from \"./components/Routes/Routes\";\nimport theme from \"./theme\";\n\nfunction App(props: RouteComponentProps<{}>) {\n    return (\n        <AuthContextProvider>\n            <ProfileContextProvider>\n                <MuiThemeProvider theme={theme}>\n                    <NavBar />\n                    <div style={{ marginTop: 70 }}>\n                        <Routes {...props} />\n                    </div>\n                </MuiThemeProvider>\n            </ProfileContextProvider>\n        </AuthContextProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Route component={App} />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}